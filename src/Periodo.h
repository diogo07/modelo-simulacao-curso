#ifndef __CURSO_PERIODO_H
#define __CURSO_PERIODO_H

#include <omnetpp.h>
#include "Aluno.h"

using namespace omnetpp;

class Periodo : public cSimpleModule {
    private:


//      CONF DA TURMA
        simsignal_t tamanhoFilaEspera;
        simsignal_t tamanhoTurma;

//      INFO DO PERIODO
        simsignal_t totalMatriculas;
        simsignal_t evadidosPorPeriodo[10];
        simsignal_t retidosPorPeriodo[10];

        simsignal_t evadidosPorSemestre[21];
        simsignal_t retidosPorSemestre[21];
        simsignal_t graduadosPorSemestre[21];

        simsignal_t evadidosSemestrePeriodo[21][10];
        simsignal_t retidosSemestrePeriodo[21][10];
        simsignal_t totalSemestrePeriodo[21][10];
        simsignal_t duracaoTransicaoPeriodo[21][10];


        simsignal_t totalEvadidos;
        simsignal_t quantidadeEvadidosGeral;
        simsignal_t quantidadeRetidosGeral;

        virtual bool compare(Aluno * aluno1, Aluno * aluno2);
        virtual void adicionarNaTurma(Aluno *aluno);
        virtual void avaliarAlunoPorEvasaoEretencao(Aluno *aluno);
        virtual bool evadir(int semestre);
        virtual bool reter(int semestre);
        virtual void emitirDadosDoPeriodo();
        virtual void processarAluno(Aluno *aluno);
        virtual void registerSignalArray();
        virtual float randomValue();

    public:
        virtual ~Periodo() override;

    protected:

//      ATRIBUTOS DE CONFIGURACAO
        SimTime tempo;
        cQueue turma;
        cQueue filaEspera;
        int capacidadeTurma;
        int periodoAtual; // O INDICE EQUIVALE AO PERIODO, EX: INDICE 1 = 1 PERIODO
        int numeroPeriodos; // INDICA A QUANTIDADE DE PERIODOS QUE O FORMATO DE CURSO POSSUI
        int portaSaida;
        int portaSaidaInicialRetencao;
        int curso = 0; // 0 - BSI, 1 - BCC
        int probsTipo = 1; // 0 - POR PERIODO, 1 - POR SEMESTRE, 2 - SEMESTRE E PERIODO

//      ESPECIFICOS
        int contadorDeAlunosNaTurma;

//      GERAL
        int retidosGeral;
        int evadidosGeral;


//      TESTES
        bool evadido = false;

/**
 *
 * METRICAS DE EVASAO E RETENCAO USADAS NO MODELO
 *
 */


//      UFRPE


//      POR PERIODO
        double probsEvasaoPeriodo [2][10] = {
                {0.23854660347551343, 0.10552763819095477, 0.07990314769975787, 0.06428571428571428, 0.0449438202247191, 0.05025125628140704, 0.03829787234042553, 0.012578616352201259, 0.004878048780487805, 0.07692307692307693},
                {0.25553319919517103, 0.12643678160919541, 0.07432432432432433, 0.04, 0.023148148148148147, 0.02717391304347826, 0.04419889502762431, 0.00909090909090909, 0.006493506493506494, 0.0}
        };


        double probsRetencaoPeriodo [2][10] = {
                {0.641390205371248, 0.576214405360134, 0.5302663438256658, 0.44285714285714284, 0.4606741573033708, 0.37185929648241206, 0.4851063829787234, 0.3522012578616352, 0.7536585365853659, 0.46153846153846156},
                {0.7766599597585513, 0.5402298850574713, 0.4966216216216216, 0.365, 0.4675925925925926, 0.42934782608695654, 0.425414364640884, 0.22727272727272727, 0.43506493506493504, 0.3620689655172414},
        };


//      POR DURACAO DE VINCULO
        double probsEvasaoDuracaoVinculo [2][21] = {
                {0.125, 0.13725490196078433, 0.11204481792717087, 0.12624584717607973, 0.05725190839694656, 0.10714285714285714, 0.07177033492822966, 0.032432432432432434, 0.1, 0.05625, 0.048, 0.03773584905660377, 0.08139534883720931, 0.012987012987012988, 0.03636363636363636, 0.10869565217391304, 0.05, 0.06896551724137931, 0.047619047619047616, 0.07692307692307693, 0.0},
                {0.1529051987767584, 0.13496932515337423, 0.08664259927797834, 0.14163090128755365, 0.0947867298578199, 0.10614525139664804, 0.07547169811320754, 0.04285714285714286, 0.023622047244094488, 0.034782608695652174, 0.01, 0.060240963855421686, 0.05333333333333334, 0.017241379310344827, 0.06976744186046512, 0.041666666666666664, 0.07692307692307693, 0.0, 0.2, 0.0, 0.0},
        };

        double probsRetencaoDuracaoVinculo [2][21] = {
                {0.007352941176470588, 0.5882352941176471, 0.6638655462184874, 0.5647840531561462, 0.5305343511450382, 0.5223214285714286, 0.5358851674641149, 0.5405405405405406, 0.6235294117647059, 0.59375, 0.688, 0.7075471698113207, 0.7558139534883721, 0.7012987012987013, 0.7636363636363637, 0.8695652173913043, 0.9, 0.9655172413793104, 0.9523809523809523, 0.6923076923076923, 0.625},
                {0.14678899082568808, 0.588957055214724, 0.6173285198555957, 0.6094420600858369, 0.6066350710900474, 0.5977653631284916, 0.5786163522012578, 0.45, 0.4330708661417323, 0.3739130434782609, 0.41, 0.5301204819277109, 0.5866666666666667, 0.7068965517241379, 0.5813953488372093, 0.625, 0.6923076923076923, 1.0, 0.8, 1.0, 0.0},
        };



//      POR PERIODO E DURACAO DE VINCULO
        double probsEvasaoPeriodoDuracaoVinculo[2][10][21] = {
                {{0.0196, 0.0621, 0.1321, 0.2267, 0.1091, 0.3529, 0.1111, 0.1429, 0.2727, 0.125, 0.0, 0.5, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0081, 0.0169, 0.1447, 0.06, 0.1622, 0.2258, 0.0476, 0.4167, 0.1, 0.2, 0.0, 0.6667, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0137, 0.0943, 0.0938, 0.0417, 0.0, 0.25, 0.1333, 0.25, 0.2, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0189, 0.0625, 0.0833, 0.1818, 0.0588, 0.0, 0.1111, 0.5, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0233, 0.0, 0.0, 0.0, 0.1333, 0.1429, 0.2, 0.1111, 0.0, 0.3333, 0.3333, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0189, 0.0857, 0.0952, 0.1111, 0.0, 0.0909, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.125, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.037, 0.0, 0.0, 0.125, 0.1429}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333, 0.3333, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
                {{0.0359, 0.0855, 0.0805, 0.2836, 0.2281, 0.1622, 0.3182, 0.2667, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0385, 0.0175, 0.122, 0.3103, 0.1364, 0.2727, 0.125, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0122, 0.02, 0.0488, 0.0333, 0.125, 0.0769, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0156, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.2, 0.25, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1765, 0.0833, 0.0, 0.0, 0.3333, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0769, 0.0, 0.0, 0.1333, 0.2222, 0.0, 0.3333, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
        };


        double probsRetencaoPeriodoDuracaoVinculo [2][10][21] = {
                {{0.4265, 0.5901, 0.6792, 0.6933, 0.5818, 0.7647, 0.5185, 0.7857, 0.7273, 0.625, 0.8, 1.0, 0.5, 1.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.4597, 0.4407, 0.5395, 0.62, 0.7838, 0.6452, 0.5714, 0.75, 0.5, 0.8, 0.75, 1.0, 0.3333, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.1618, 0.3014, 0.4528, 0.5938, 0.625, 0.75, 0.8125, 0.5333, 0.625, 0.6, 0.6667, 1.0, 1.0, 1.0, 0.5, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.2, 0.3846, 0.4528, 0.5625, 0.7083, 0.6364, 0.4706, 0.8182, 0.4444, 0.5, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.1667, 0.1395, 0.2286, 0.5, 0.7333, 0.6667, 0.6429, 0.6, 0.4444, 0.75, 1.0, 0.3333, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.2889, 0.52, 0.4717, 0.4571, 0.5714, 0.6667, 0.5333, 0.5455, 0.25, 0.5, 2.0, 0.5, 1.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2188, 0.2667, 0.3125, 0.3929, 0.4706, 0.3333, 0.75, 0.5455, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8846, 0.5918, 0.78, 0.7143, 0.8542, 0.6042, 0.8065, 0.8966, 0.8929, 0.8889, 0.7083, 0.4706, 0.875, 1.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0476, 0.0909, 0.1111, 0.0, 0.0714, 0.125, 0.4, 0.5, 0.6667, 0.3333, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
                {{0.3795, 0.6154, 0.7471, 0.806, 0.6316, 0.5946, 0.6818, 0.5333, 0.5, 0.25, 2.0, 0.5, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.3279, 0.5769, 0.5965, 0.6341, 0.6897, 0.4545, 0.7273, 0.375, 0.3333, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.2317, 0.4, 0.3902, 0.4, 0.625, 0.3077, 0.5, 0.5, 0.6667, 0.5, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.3281, 0.449, 0.5581, 0.4359, 0.2857, 0.6154, 0.5, 0.5714, 0.8, 0.5, 0.5, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 1.0, 0.2889, 0.4, 0.2353, 0.4231, 0.5, 0.5294, 0.3333, 0.75, 1.0, 0.6667, 0.5, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.2424, 0.4375, 0.25, 0.5, 0.4167, 0.5, 0.6, 0.6667, 0.3333, 0.6667, 0.5, 1.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08, 0.3889, 0.1081, 0.0667, 0.25, 0.4545, 0.1429, 0.5, 0.5, 0.5, 1.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333, 0.3448, 0.2326, 0.3521, 0.4533, 0.4179, 0.4655, 0.4419, 0.2857, 0.3333, 0.5, 0.8, 0.6, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
        };


        virtual void initialize() override;
        virtual void handleMessage(cMessage *msg) override;
        virtual void finish() override;
};


#endif
