#ifndef __CURSO_PERIODO_H
#define __CURSO_PERIODO_H

#include <omnetpp.h>
#include "Aluno.h"

using namespace omnetpp;

class Periodo : public cSimpleModule {
    private:


//      CONF DA TURMA
        simsignal_t tamanhoFilaEspera;
        simsignal_t tamanhoTurma;

//      INFO DO PERIODO
        simsignal_t totalMatriculas;
        simsignal_t evadidosPorPeriodo[10];
        simsignal_t reprovadosPorPeriodo[10];

        simsignal_t evadidosPorSemestre[21];
        simsignal_t reprovadosPorSemestre[21];
        simsignal_t graduadosPorSemestre[21];

        simsignal_t evadidosSemestrePeriodo[21][10];
        simsignal_t reprovadosSemestrePeriodo[21][10];
        simsignal_t totalSemestrePeriodo[21][10];
        simsignal_t duracaoTransicaoPeriodo[21][10];


        simsignal_t totalEvadidos;
        simsignal_t quantidadeEvadidosGeral;
        simsignal_t quantidadeReprovadosGeral;

        virtual bool compare(Aluno * aluno1, Aluno * aluno2);
        virtual void adicionarNaTurma(Aluno *aluno);
        virtual void avaliarAlunoPorEvasaoEreprovacao(Aluno *aluno);
        virtual bool evadir(int semestre);
        virtual bool reprovar(int semestre);
        virtual void emitirDadosDoPeriodo();
        virtual void processarAluno(Aluno *aluno);
        virtual void registerSignalArray();
        virtual float randomValue();

    public:
        virtual ~Periodo() override;

    protected:

//      ATRIBUTOS DE CONFIGURACAO
        SimTime tempo;
        cQueue turma;
        cQueue filaEspera;
        int capacidadeTurma;
        int periodoAtual; // O INDICE EQUIVALE AO PERIODO, EX: INDICE 1 = 1 PERIODO
        int numeroPeriodos; // INDICA A QUANTIDADE DE PERIODOS QUE O FORMATO DE CURSO POSSUI
        int portaSaida;
        int portaSaidaInicialReprovacao;
        int curso = 1; // 0 - BSI, 1 - BCC
        int probsTipo = 2; // 0 - POR PERIODO, 1 - POR SEMESTRE, 2 - SEMESTRE E PERIODO

//      ESPECIFICOS
        int contadorDeAlunosNaTurma;

//      GERAL
        int reprovadosGeral;
        int evadidosGeral;


//      TESTES
        bool evadido = false;

/**
 *
 * METRICAS DE EVASAO E REPROVACAO USADAS NO MODELO
 *
 */


//      UFRPE


//      POR PERIODO
        double probsEvasaoPeriodo [2][10] = {
                {0.2384, 0.1028, 0.0759, 0.0415, 0.0437, 0.0428, 0.0087, 0.0114, 0.0, 0.0},
                {0.2573, 0.1135, 0.0662, 0.0272, 0.0267, 0.0396, 0.0138, 0.0142, 0.0, 0.0}
        };


        double probsReprovacaoPeriodo [2][10] = {
                {0.6352, 0.5479, 0.5196, 0.4364, 0.4303, 0.3385, 0.4698, 0.3168, 0.6906, 0.1277},
                {0.6778, 0.4963, 0.4847, 0.3535, 0.4587, 0.4054, 0.3944, 0.2105, 0.3505, 0.0}
        };


//      POR DURACAO DE VINCULO
        double probsEvasaoDuracaoVinculo [2][23] = {
                {0.1262, 0.1361, 0.1133, 0.1275, 0.0581, 0.1045, 0.0732, 0.033, 0.1018, 0.051, 0.0492, 0.0288, 0.0843, 0.0133, 0.037, 0.0698, 0.0526, 0.069, 0.0476, 0.0769, 0.0, 0.0},
                {0.1531, 0.1312, 0.0886, 0.1397, 0.0927, 0.0983, 0.0649, 0.0365, 0.0238, 0.0351, 0.0102, 0.05, 0.0417, 0.0179, 0.0714, 0.0435, 0.0833, 0.0, 0.25, 0.0, 0.0, 0.0},
        };

        double probsReprovacaoDuracaoVinculo [2][23] = {
                {0.5446, 0.5693, 0.4731, 0.453, 0.4341, 0.4773, 0.4634, 0.478, 0.497, 0.5287, 0.5984, 0.5962, 0.6386, 0.5333, 0.7037, 0.7674, 0.7368, 0.6897, 0.4286, 0.3846, 0.25, 0.0},
                {0.5531, 0.5156, 0.5018, 0.5328, 0.4829, 0.4798, 0.3766, 0.365, 0.3413, 0.3333, 0.3776, 0.5, 0.5139, 0.375, 0.3095, 0.3478, 0.5, 0.5, 0.75, 0.0, 0.0, 0.0},
        };



//      POR PERIODO E DURACAO DE VINCULO
        double probsEvasaoPeriodoDuracaoVinculo[2][10][22] = {
                {{0.2061, 0.2822, 0.2477, 0.2459, 0.1935, 0.2143, 0.25, 0.2, 0.3333, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0227, 0.0492, 0.1091, 0.2237, 0.0702, 0.3158, 0.1875, 0.1111, 0.3333, 0.0, 0.1667, 0.1667, 0.2, 0.25, 0.3333, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0097, 0.0694, 0.1042, 0.1818, 0.1538, 0.0588, 0.3636, 0.1, 0.2, 0.0, 0.3333, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0118, 0.0, 0.0222, 0.0417, 0.0, 0.3333, 0.1538, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0213, 0.0444, 0.069, 0.0, 0.125, 0.0667, 0.2, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0833, 0.087, 0.1667, 0.0, 0.0714, 0.0, 0.25, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0769, 0.0, 0.0, 0.125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0385, 0.0417, 0.0556, 0.1111, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
                {{0.2857, 0.2672, 0.1707, 0.3043, 0.1935, 0.3125, 0.4, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0301, 0.0714, 0.1194, 0.3077, 0.225, 0.1818, 0.1818, 0.3333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0282, 0.0, 0.1154, 0.381, 0.1053, 0.2857, 0.1667, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0303, 0.0238, 0.0, 0.0909, 0.0667, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1333, 0.125, 0.0, 0.25, 0.25, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0435, 0.05, 0.0, 0.2, 0.125, 0.0, 0.25, 0.3333, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0357, 0.0, 0.0, 0.0, 0.1667, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
        };


        double probsReprovacaoPeriodoDuracaoVinculo [2][10][22] = {
                {{0.7149, 0.6687, 0.5596, 0.5082, 0.4516, 0.5714, 0.625, 0.6, 0.6667, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.4886, 0.5628, 0.6727, 0.7105, 0.6316, 0.8421, 0.5625, 0.6667, 0.8333, 0.6, 1.0, 0.8333, 0.8, 0.75, 0.6667, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.3276, 0.4272, 0.5278, 0.6042, 0.7273, 0.5769, 0.6471, 0.9091, 0.5, 0.8, 0.75, 0.6667, 0.5, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0968, 0.3412, 0.5, 0.4444, 0.6667, 0.619, 0.8667, 0.4615, 0.3333, 1.0, 1.0, 0.3333, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.2167, 0.4255, 0.4889, 0.4828, 0.7143, 0.75, 0.5333, 0.4, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.2791, 0.4884, 0.5349, 0.5278, 0.6087, 0.6667, 0.5625, 0.6429, 0.4, 0.75, 0.6667, 0.5, 1.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1481, 0.3824, 0.4857, 0.5, 0.5, 0.5625, 0.7692, 0.6667, 0.6154, 0.625, 0.4, 0.5, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1333, 0.2903, 0.7586, 0.6579, 0.8857, 0.6579, 0.7857, 0.9231, 0.8519, 0.9231, 0.75, 0.5, 0.5556, 0.4, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
                {{0.8506, 0.626, 0.561, 0.6739, 0.5161, 0.625, 0.5, 0.2, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.3675, 0.6327, 0.7612, 0.75, 0.525, 0.5, 0.5455, 0.5, 0.3333, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.2527, 0.4225, 0.525, 0.6923, 0.8095, 0.3158, 0.7143, 0.6667, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.3922, 0.3788, 0.6905, 0.5676, 0.5, 0.6, 0.3333, 0.3333, 1.0, 0.75, 0.3333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.28, 0.5306, 0.4865, 0.4375, 0.6, 0.5263, 0.4, 0.5, 0.75, 0.75, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.2353, 0.3448, 0.5, 0.3529, 0.6087, 0.4, 0.6, 0.8, 0.625, 0.5, 0.75, 0.6667, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0909, 0.2941, 0.35, 0.3571, 0.2, 0.4118, 0.3333, 0.3333, 0.3333, 1.0, 0.6667, 1.0, 0.5, 1.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3077, 0.1429, 0.3077, 0.5238, 0.28, 0.4706, 0.375, 0.4, 0.75, 0.0, 0.5, 0.0, 1.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2727, 0.2083, 0.1379, 0.2593, 0.375, 0.4412, 0.375, 0.2, 0.2308, 0.3333, 1.0, 0.5, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
        };


        virtual void initialize() override;
        virtual void handleMessage(cMessage *msg) override;
        virtual void finish() override;
};


#endif
