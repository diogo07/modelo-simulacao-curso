#ifndef __CURSO_PERIODO_H
#define __CURSO_PERIODO_H

#include <omnetpp.h>
#include "Aluno.h"

using namespace omnetpp;

class Periodo : public cSimpleModule {
    private:


//      CONF DA TURMA
        simsignal_t tamanhoFilaEspera;
        simsignal_t tamanhoTurma;

//      INFO DO PERIODO
        simsignal_t totalMatriculas;
        simsignal_t evadidosPorPeriodo[10];
        simsignal_t retidosPorPeriodo[10];

        simsignal_t evadidosPorSemestre[21];
        simsignal_t retidosPorSemestre[21];
        simsignal_t graduadosPorSemestre[21];

        simsignal_t evadidosSemestrePeriodo[21][10];
        simsignal_t retidosSemestrePeriodo[21][10];
        simsignal_t totalSemestrePeriodo[21][10];
        simsignal_t duracaoTransicaoPeriodo[21][10];


        simsignal_t totalEvadidos;
        simsignal_t quantidadeEvadidosGeral;
        simsignal_t quantidadeRetidosGeral;

        virtual bool compare(Aluno * aluno1, Aluno * aluno2);
        virtual void adicionarNaTurma(Aluno *aluno);
        virtual void avaliarAlunoPorEvasaoEretencao(Aluno *aluno);
        virtual bool evadir(int semestre);
        virtual bool reter(int semestre);
        virtual void emitirDadosDoPeriodo();
        virtual void processarAluno(Aluno *aluno);
        virtual void registerSignalArray();
        virtual float randomValue();

    public:
        virtual ~Periodo() override;

    protected:

//      ATRIBUTOS DE CONFIGURACAO
        SimTime tempo;
        cQueue turma;
        cQueue filaEspera;
        int capacidadeTurma;
        int periodoAtual; // O INDICE EQUIVALE AO PERIODO, EX: INDICE 1 = 1 PERIODO
        int numeroPeriodos; // INDICA A QUANTIDADE DE PERIODOS QUE O FORMATO DE CURSO POSSUI
        int portaSaida;
        int portaSaidaInicialRetencao;
        int curso = 0; // 0 - BSI, 1 - BCC
        int probsTipo = 2; // 0 - POR PERIODO, 1 - POR SEMESTRE, 2 - SEMESTRE E PERIODO

//      ESPECIFICOS
        int contadorDeAlunosNaTurma;

//      GERAL
        int retidosGeral;
        int evadidosGeral;


//      TESTES
        bool evadido = false;

/**
 *
 * METRICAS DE EVASAO E RETENCAO USADAS NO MODELO
 *
 */


//      UFRPE


//      POR PERIODO
        double probsEvasaoPeriodo [2][10] = {
                {0.2399, 0.1063, 0.0822, 0.0644, 0.0464, 0.0455, 0.038, 0.0109, 0.0045, 0.0192},
                {0.2399, 0.1238, 0.0716, 0.0324, 0.0193, 0.0282, 0.0374, 0.0075, 0.0022}
        };


        double probsRetencaoPeriodo [2][10] = {
                {0.6414, 0.5818, 0.5411, 0.4417, 0.447, 0.3591, 0.4753, 0.3587, 0.7433, 0.125},
                {0.7571, 0.5782, 0.5066, 0.3603, 0.444, 0.3944, 0.4019, 0.2015, 0.3914, 0.0},
        };


//      POR DURACAO DE VINCULO
        double probsEvasaoDuracaoVinculo [2][21] = {
                {0.1377, 0.1337, 0.1181, 0.1315, 0.0762, 0.109, 0.062, 0.0329, 0.101, 0.0535, 0.0479, 0.048, 0.0729, 0.013, 0.0364, 0.1087, 0.05, 0.069, 0.0476, 0.0769, 0.0},
                {0.148, 0.1292, 0.0784, 0.1452, 0.1047, 0.094, 0.078, 0.0492, 0.0303, 0.0336, 0.0076, 0.055, 0.0465, 0.0172, 0.0698, 0.0417, 0.0769, 0.0, 0.2, 0.0, 0.0},
        };

        double probsRetencaoDuracaoVinculo [2][21] = {
                {0.6048, 0.5808, 0.5, 0.4658, 0.4508, 0.4812, 0.4669, 0.5822, 0.5657, 0.5348, 0.6301, 0.6, 0.5625, 0.5455, 0.7273, 0.7826, 0.7, 0.6897, 0.4286, 0.5385, 0.0},
                {0.6038, 0.5311, 0.5406, 0.5743, 0.4838, 0.4872, 0.4049, 0.3661, 0.3455, 0.3758, 0.4621, 0.4954, 0.4767, 0.431, 0.3488, 0.375, 0.5385, 0.5714, 0.6, 0.0, 0.0},
        };



//      POR PERIODO E DURACAO DE VINCULO
        double probsEvasaoPeriodoDuracaoVinculo[2][10][21] = {
                {{0.0196, 0.0621, 0.1321, 0.2267, 0.1091, 0.3529, 0.1111, 0.1429, 0.2727, 0.125, 0.0, 0.5, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0081, 0.0169, 0.1447, 0.06, 0.1622, 0.2258, 0.0476, 0.4167, 0.1, 0.2, 0.0, 0.6667, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0137, 0.0943, 0.0938, 0.0417, 0.0, 0.25, 0.1333, 0.25, 0.2, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0189, 0.0625, 0.0833, 0.1818, 0.0588, 0.0, 0.1111, 0.5, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0233, 0.0, 0.0, 0.0, 0.1333, 0.1429, 0.2, 0.1111, 0.0, 0.3333, 0.3333, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0189, 0.0857, 0.0952, 0.1111, 0.0, 0.0909, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.125, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.037, 0.0, 0.0, 0.125, 0.1429}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333, 0.3333, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
                {{0.0359, 0.0855, 0.0805, 0.2836, 0.2281, 0.1622, 0.3182, 0.2667, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0385, 0.0175, 0.122, 0.3103, 0.1364, 0.2727, 0.125, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0122, 0.02, 0.0488, 0.0333, 0.125, 0.0769, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0156, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.2, 0.25, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1765, 0.0833, 0.0, 0.0, 0.3333, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0769, 0.0, 0.0, 0.1333, 0.2222, 0.0, 0.3333, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
        };


        double probsRetencaoPeriodoDuracaoVinculo [2][10][21] = {
                {{0.4265, 0.5901, 0.6792, 0.6933, 0.5818, 0.7647, 0.5185, 0.7857, 0.7273, 0.625, 0.8, 1.0, 0.5, 1.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.4597, 0.4407, 0.5395, 0.62, 0.7838, 0.6452, 0.5714, 0.75, 0.5, 0.8, 0.75, 1.0, 0.3333, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.1618, 0.3014, 0.4528, 0.5938, 0.625, 0.75, 0.8125, 0.5333, 0.625, 0.6, 0.6667, 1.0, 1.0, 1.0, 0.5, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.2, 0.3846, 0.4528, 0.5625, 0.7083, 0.6364, 0.4706, 0.8182, 0.4444, 0.5, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.1667, 0.1395, 0.2286, 0.5, 0.7333, 0.6667, 0.6429, 0.6, 0.4444, 0.75, 1.0, 0.3333, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.2889, 0.52, 0.4717, 0.4571, 0.5714, 0.6667, 0.5333, 0.5455, 0.25, 0.5, 2.0, 0.5, 1.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2188, 0.2667, 0.3125, 0.3929, 0.4706, 0.3333, 0.75, 0.5455, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8846, 0.5918, 0.78, 0.7143, 0.8542, 0.6042, 0.8065, 0.8966, 0.8929, 0.8889, 0.7083, 0.4706, 0.875, 1.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0476, 0.0909, 0.1111, 0.0, 0.0714, 0.125, 0.4, 0.5, 0.6667, 0.3333, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
                {{0.3795, 0.6154, 0.7471, 0.806, 0.6316, 0.5946, 0.6818, 0.5333, 0.5, 0.25, 2.0, 0.5, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.3279, 0.5769, 0.5965, 0.6341, 0.6897, 0.4545, 0.7273, 0.375, 0.3333, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.2317, 0.4, 0.3902, 0.4, 0.625, 0.3077, 0.5, 0.5, 0.6667, 0.5, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.3281, 0.449, 0.5581, 0.4359, 0.2857, 0.6154, 0.5, 0.5714, 0.8, 0.5, 0.5, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 1.0, 0.2889, 0.4, 0.2353, 0.4231, 0.5, 0.5294, 0.3333, 0.75, 1.0, 0.6667, 0.5, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.2424, 0.4375, 0.25, 0.5, 0.4167, 0.5, 0.6, 0.6667, 0.3333, 0.6667, 0.5, 1.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08, 0.3889, 0.1081, 0.0667, 0.25, 0.4545, 0.1429, 0.5, 0.5, 0.5, 1.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333, 0.3448, 0.2326, 0.3521, 0.4533, 0.4179, 0.4655, 0.4419, 0.2857, 0.3333, 0.5, 0.8, 0.6, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
        };


        virtual void initialize() override;
        virtual void handleMessage(cMessage *msg) override;
        virtual void finish() override;
};


#endif
